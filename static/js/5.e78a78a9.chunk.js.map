{"version":3,"sources":["components/Dialogs/Dialogs.module.css","Hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsConteiner.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLen5","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","updateNewMessageBody","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kECC9KC,EAAkB,SAACC,GAEnB,MAAO,CAAEC,OAAQD,EAAME,KAAKD,SAqBjBE,IAlBQ,SAACC,GAcpB,OAAOC,kBAAQN,EAARM,EAXP,SAA2BC,GACvB,OAAKA,EAAML,OAIJ,cAACG,EAAD,eAAeE,IAHX,cAAC,WAAD,CAAUC,GAAO,gB,6FCDrBC,EARI,SAACF,GAClB,IAAIG,EAAO,YAAcH,EAAMI,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASP,GAAIE,EAAb,SAAoBH,EAAMS,UCCjBC,EAJC,SAACV,GACf,OAAO,qBAAKK,UAAWC,IAAEK,QAAlB,SAA4BX,EAAMW,W,oDCIvCC,EAAUC,YAAiB,GAgBzBC,EAAsBC,IAAU,CACpCC,KAAK,wBADqBD,EAfL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACM,8BACE,cAAC,IAAD,CAAOC,UAAWC,IAAUX,KAAM,iBAChCY,YAAa,oBACbC,SAAU,CAACC,IAASX,OAGxB,8BACE,kDAmCGY,EA3BC,SAACxB,GACf,IAAIyB,EAAkBzB,EAAM0B,YAAYC,QAAQC,KAAI,SAACC,GAAD,OAClD,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBL,GAAIyB,EAAEzB,IAAZyB,EAAEzB,OAG/B0B,EAAmB9B,EAAM0B,YAAYK,SAASH,KAAI,SAACI,GAAD,OACpD,cAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE5B,OAQtC,OAEE,sBAAKC,UAAWC,IAAEqB,QAAlB,UACE,sBAAKtB,UAAWC,IAAE2B,aAAlB,cAAkCR,KAClC,sBAAKpB,UAAWC,IAAEyB,SAAlB,UACG,IACD,cAACjB,EAAD,CAAqBG,SAXL,SAACiB,GACrBlC,EAAMmC,qBAAqBD,EAAOE,mBAW9B,8BAAMN,W,yBCxBCO,4BACbtC,mBAhBoB,SAACL,GACrB,MAAO,CACLgC,YAAahC,EAAMgC,gBAGE,SAACY,GACxB,MAAO,CACLH,qBAAsB,SAACC,GACrBE,EAASC,YAAmBH,SAShCvC,IAFawC,CAGXb","file":"static/js/5.e78a78a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2-o4v\",\"dialogsItems\":\"Dialogs_dialogsItems__3Qdxi\",\"active\":\"Dialogs_active__13LV_\",\"messages\":\"Dialogs_messages__27kCS\",\"message\":\"Dialogs_message__wGPX-\"};","import { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nlet mapStateToProps = (state) => {\r\n\r\n    return { isAuth: state.auth.isAuth }\r\n}\r\n\r\nlet withAuthRedirect = (Component) => {\r\n\r\n\r\n    function RedirectComponent(props) {\r\n        if (!props.isAuth) {\r\n            return <Redirect to = { \"/login\" }\r\n            />\r\n        }\r\n        return <Component {...props }\r\n        />\r\n    }\r\n\r\n    //let ConnectedAuthoRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n\r\nexport default withAuthRedirect","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default DialogItem;\r\n","import React from \"react\";\r\n\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n//import { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport Field from \"redux-form/lib/Field\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../utils/validators/validators\";\r\nlet maxLen5 = maxLengthCreator(5)\r\nconst addMessageForm = (props) =>{\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            <Field component={Textarea} name={\"newMessageBody\"} \r\n              placeholder={\"enter you message\"} \r\n              validate={[required,maxLen5]}\r\n              />\r\n          </div>\r\n          <div>\r\n            <button >Send</button>\r\n          </div>\r\n        </form>\r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n  form:\"dialogAddMessageForm\"\r\n})(addMessageForm)\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = props.dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  \r\n  const addnewMessage = (values)=>{\r\n    props.updateNewMessageBody(values.newMessageBody)\r\n  }\r\n  \r\n\r\n  return (\r\n    \r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}> {dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        {\" \"}\r\n        <AddMessageFormRedux onSubmit={addnewMessage} />\r\n        <div>{messagesElements}</div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import {\r\n  sendMessageCreator\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../Hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewMessageBody: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n// let AuthRedirectComponent = withAuthContainer(Dialogs)\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n  )(Dialogs)\r\n"],"sourceRoot":""}